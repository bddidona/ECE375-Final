////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : main.vf
// /___/   /\     Timestamp : 12/08/2017 10:36:17
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan3e -verilog C:/Users/User/Desktop/FinalProject/main.vf -w C:/Users/User/Desktop/FinalProject/main.sch
//Design Name: main
//Device: spartan3e
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module M2_1E_MXILINX_main(D0, 
                          D1, 
                          E, 
                          S0, 
                          O);

    input D0;
    input D1;
    input E;
    input S0;
   output O;
   
   wire M0;
   wire M1;
   
   AND3  I_36_30 (.I0(D1), 
                 .I1(E), 
                 .I2(S0), 
                 .O(M1));
   AND3B1  I_36_31 (.I0(S0), 
                   .I1(E), 
                   .I2(D0), 
                   .O(M0));
   OR2  I_36_38 (.I0(M1), 
                .I1(M0), 
                .O(O));
endmodule
`timescale 1ns / 1ps

module M4_1E_MXILINX_main(D0, 
                          D1, 
                          D2, 
                          D3, 
                          E, 
                          S0, 
                          S1, 
                          O);

    input D0;
    input D1;
    input D2;
    input D3;
    input E;
    input S0;
    input S1;
   output O;
   
   wire M01;
   wire M23;
   
   (* HU_SET = "I_M01_1" *) 
   M2_1E_MXILINX_main  I_M01 (.D0(D0), 
                             .D1(D1), 
                             .E(E), 
                             .S0(S0), 
                             .O(M01));
   (* HU_SET = "I_M23_0" *) 
   M2_1E_MXILINX_main  I_M23 (.D0(D2), 
                             .D1(D3), 
                             .E(E), 
                             .S0(S0), 
                             .O(M23));
   MUXF5  I_O (.I0(M01), 
              .I1(M23), 
              .S(S1), 
              .O(O));
endmodule
`timescale 1ns / 1ps

module fullAdder_MUSER_main(A, 
                            B, 
                            Cin, 
                            Cout, 
                            S);

    input A;
    input B;
    input Cin;
   output Cout;
   output S;
   
   wire XLXN_7;
   wire XLXN_9;
   wire XLXN_10;
   
   XOR2  XLXI_1 (.I0(B), 
                .I1(A), 
                .O(XLXN_7));
   XOR2  XLXI_2 (.I0(Cin), 
                .I1(XLXN_7), 
                .O(S));
   AND2  XLXI_3 (.I0(A), 
                .I1(B), 
                .O(XLXN_10));
   AND2  XLXI_4 (.I0(Cin), 
                .I1(XLXN_7), 
                .O(XLXN_9));
   OR2  XLXI_5 (.I0(XLXN_10), 
               .I1(XLXN_9), 
               .O(Cout));
endmodule
`timescale 1ns / 1ps

module M2_1_MXILINX_main(D0, 
                         D1, 
                         S0, 
                         O);

    input D0;
    input D1;
    input S0;
   output O;
   
   wire M0;
   wire M1;
   
   AND2B1  I_36_7 (.I0(S0), 
                  .I1(D0), 
                  .O(M0));
   OR2  I_36_8 (.I0(M1), 
               .I1(M0), 
               .O(O));
   AND2  I_36_9 (.I0(D1), 
                .I1(S0), 
                .O(M1));
endmodule
`timescale 1ns / 1ps

module ALU_MUSER_main(A, 
                      B, 
                      Cin, 
                      S0, 
                      S1, 
                      S2, 
                      S3, 
                      S4, 
                      S5, 
                      Cout, 
                      O);

    input A;
    input B;
    input Cin;
    input S0;
    input S1;
    input S2;
    input S3;
    input S4;
    input S5;
   output Cout;
   output O;
   
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_7;
   wire XLXN_9;
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_15;
   wire XLXN_16;
   wire XLXN_17;
   wire XLXN_23;
   wire XLXN_26;
   wire XLXN_30;
   
   (* HU_SET = "XLXI_1_2" *) 
   M4_1E_MXILINX_main  XLXI_1 (.D0(XLXN_13), 
                              .D1(XLXN_14), 
                              .D2(XLXN_15), 
                              .D3(XLXN_16), 
                              .E(XLXN_23), 
                              .S0(S0), 
                              .S1(S1), 
                              .O(XLXN_17));
   (* HU_SET = "XLXI_2_3" *) 
   M2_1_MXILINX_main  XLXI_2 (.D0(XLXN_17), 
                             .D1(A), 
                             .S0(S4), 
                             .O(O));
   (* HU_SET = "XLXI_3_4" *) 
   M2_1_MXILINX_main  XLXI_3 (.D0(B), 
                             .D1(XLXN_7), 
                             .S0(S3), 
                             .O(XLXN_3));
   fullAdder_MUSER_main  XLXI_5 (.A(A), 
                                .B(XLXN_3), 
                                .Cin(XLXN_4), 
                                .Cout(Cout), 
                                .S(XLXN_16));
   INV  XLXI_6 (.I(B), 
               .O(XLXN_7));
   VCC  XLXI_7 (.P(XLXN_26));
   GND  XLXI_8 (.G(XLXN_9));
   AND2  XLXI_9 (.I0(B), 
                .I1(A), 
                .O(XLXN_13));
   OR2  XLXI_10 (.I0(A), 
                .I1(B), 
                .O(XLXN_14));
   XOR2  XLXI_11 (.I0(A), 
                 .I1(B), 
                 .O(XLXN_15));
   VCC  XLXI_12 (.P(XLXN_23));
   (* HU_SET = "XLXI_13_5" *) 
   M4_1E_MXILINX_main  XLXI_13 (.D0(XLXN_9), 
                               .D1(XLXN_26), 
                               .D2(Cin), 
                               .D3(), 
                               .E(XLXN_30), 
                               .S0(S5), 
                               .S1(S2), 
                               .O(XLXN_4));
   VCC  XLXI_14 (.P(XLXN_30));
endmodule
`timescale 1ns / 1ps

module accumulator_MUSER_main(A0, 
                              A1, 
                              A2, 
                              A3, 
                              A4, 
                              A5, 
                              A6, 
                              A7, 
                              B0, 
                              B1, 
                              B2, 
                              B3, 
                              B4, 
                              B5, 
                              B6, 
                              B7, 
                              CE, 
                              Cin, 
                              CLK, 
                              CLR, 
                              S0, 
                              S1, 
                              S2, 
                              S3, 
                              S4, 
                              S5, 
                              O0, 
                              O1, 
                              O2, 
                              O3, 
                              O4, 
                              O5, 
                              O6, 
                              O7);

    input A0;
    input A1;
    input A2;
    input A3;
    input A4;
    input A5;
    input A6;
    input A7;
    input B0;
    input B1;
    input B2;
    input B3;
    input B4;
    input B5;
    input B6;
    input B7;
    input CE;
    input Cin;
    input CLK;
    input CLR;
    input S0;
    input S1;
    input S2;
    input S3;
    input S4;
    input S5;
   output O0;
   output O1;
   output O2;
   output O3;
   output O4;
   output O5;
   output O6;
   output O7;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_7;
   wire XLXN_49;
   wire XLXN_50;
   wire XLXN_51;
   wire XLXN_52;
   wire XLXN_53;
   wire XLXN_54;
   wire XLXN_55;
   wire XLXN_56;
   
   FDCE #( .INIT(1'b0) ) XLXI_1 (.C(CLK), 
                .CE(CE), 
                .CLR(CLR), 
                .D(XLXN_1), 
                .Q(O0));
   FDCE #( .INIT(1'b0) ) XLXI_2 (.C(CLK), 
                .CE(CE), 
                .CLR(CLR), 
                .D(XLXN_2), 
                .Q(O1));
   FDCE #( .INIT(1'b0) ) XLXI_3 (.C(CLK), 
                .CE(CE), 
                .CLR(CLR), 
                .D(XLXN_3), 
                .Q(O2));
   FDCE #( .INIT(1'b0) ) XLXI_4 (.C(CLK), 
                .CE(CE), 
                .CLR(CLR), 
                .D(XLXN_4), 
                .Q(O3));
   FDCE #( .INIT(1'b0) ) XLXI_5 (.C(CLK), 
                .CE(CE), 
                .CLR(CLR), 
                .D(XLXN_5), 
                .Q(O4));
   FDCE #( .INIT(1'b0) ) XLXI_6 (.C(CLK), 
                .CE(CE), 
                .CLR(CLR), 
                .D(XLXN_6), 
                .Q(O5));
   FDCE #( .INIT(1'b0) ) XLXI_18 (.C(CLK), 
                 .CE(CE), 
                 .CLR(CLR), 
                 .D(XLXN_7), 
                 .Q(O6));
   FDCE #( .INIT(1'b0) ) XLXI_19 (.C(CLK), 
                 .CE(CE), 
                 .CLR(CLR), 
                 .D(XLXN_49), 
                 .Q(O7));
   ALU_MUSER_main  XLXI_36 (.A(A0), 
                           .B(B0), 
                           .Cin(Cin), 
                           .S0(S0), 
                           .S1(S1), 
                           .S2(S2), 
                           .S3(S3), 
                           .S4(S4), 
                           .S5(S5), 
                           .Cout(XLXN_50), 
                           .O(XLXN_1));
   ALU_MUSER_main  XLXI_37 (.A(A1), 
                           .B(B1), 
                           .Cin(XLXN_50), 
                           .S0(S0), 
                           .S1(S1), 
                           .S2(S2), 
                           .S3(S3), 
                           .S4(S4), 
                           .S5(S5), 
                           .Cout(XLXN_51), 
                           .O(XLXN_2));
   ALU_MUSER_main  XLXI_38 (.A(A2), 
                           .B(B2), 
                           .Cin(XLXN_51), 
                           .S0(S0), 
                           .S1(S1), 
                           .S2(S2), 
                           .S3(S3), 
                           .S4(S4), 
                           .S5(S5), 
                           .Cout(XLXN_52), 
                           .O(XLXN_3));
   ALU_MUSER_main  XLXI_39 (.A(A3), 
                           .B(B3), 
                           .Cin(XLXN_52), 
                           .S0(S0), 
                           .S1(S1), 
                           .S2(S2), 
                           .S3(S3), 
                           .S4(S4), 
                           .S5(S5), 
                           .Cout(XLXN_53), 
                           .O(XLXN_4));
   ALU_MUSER_main  XLXI_40 (.A(A4), 
                           .B(B4), 
                           .Cin(XLXN_53), 
                           .S0(S0), 
                           .S1(S1), 
                           .S2(S2), 
                           .S3(S3), 
                           .S4(S4), 
                           .S5(S5), 
                           .Cout(XLXN_54), 
                           .O(XLXN_5));
   ALU_MUSER_main  XLXI_41 (.A(A5), 
                           .B(B5), 
                           .Cin(XLXN_54), 
                           .S0(S0), 
                           .S1(S1), 
                           .S2(S2), 
                           .S3(S3), 
                           .S4(S4), 
                           .S5(S5), 
                           .Cout(XLXN_55), 
                           .O(XLXN_6));
   ALU_MUSER_main  XLXI_42 (.A(A6), 
                           .B(B6), 
                           .Cin(XLXN_55), 
                           .S0(S0), 
                           .S1(S1), 
                           .S2(S2), 
                           .S3(S3), 
                           .S4(S4), 
                           .S5(S5), 
                           .Cout(XLXN_56), 
                           .O(XLXN_7));
   ALU_MUSER_main  XLXI_43 (.A(A7), 
                           .B(B7), 
                           .Cin(XLXN_56), 
                           .S0(S0), 
                           .S1(S1), 
                           .S2(S2), 
                           .S3(S3), 
                           .S4(S4), 
                           .S5(S5), 
                           .Cout(), 
                           .O(XLXN_49));
endmodule
`timescale 1ns / 1ps

module FD4CE_MXILINX_main(C, 
                          CE, 
                          CLR, 
                          D0, 
                          D1, 
                          D2, 
                          D3, 
                          Q0, 
                          Q1, 
                          Q2, 
                          Q3);

    input C;
    input CE;
    input CLR;
    input D0;
    input D1;
    input D2;
    input D3;
   output Q0;
   output Q1;
   output Q2;
   output Q3;
   
   
   FDCE #( .INIT(1'b0) ) I_Q0 (.C(C), 
              .CE(CE), 
              .CLR(CLR), 
              .D(D0), 
              .Q(Q0));
   FDCE #( .INIT(1'b0) ) I_Q1 (.C(C), 
              .CE(CE), 
              .CLR(CLR), 
              .D(D1), 
              .Q(Q1));
   FDCE #( .INIT(1'b0) ) I_Q2 (.C(C), 
              .CE(CE), 
              .CLR(CLR), 
              .D(D2), 
              .Q(Q2));
   FDCE #( .INIT(1'b0) ) I_Q3 (.C(C), 
              .CE(CE), 
              .CLR(CLR), 
              .D(D3), 
              .Q(Q3));
endmodule
`timescale 1ns / 1ps

module counter_MUSER_main(CLK, 
                          CLR, 
                          INC, 
                          PC0, 
                          PC1, 
                          PC2, 
                          PC3);

    input CLK;
    input CLR;
    input INC;
   output PC0;
   output PC1;
   output PC2;
   output PC3;
   
   wire XLXN_7;
   wire XLXN_8;
   wire XLXN_9;
   wire XLXN_10;
   wire XLXN_12;
   wire XLXN_25;
   wire XLXN_30;
   wire XLXN_33;
   wire PC0_DUMMY;
   wire PC1_DUMMY;
   wire PC2_DUMMY;
   wire PC3_DUMMY;
   
   assign PC0 = PC0_DUMMY;
   assign PC1 = PC1_DUMMY;
   assign PC2 = PC2_DUMMY;
   assign PC3 = PC3_DUMMY;
   FDCE #( .INIT(1'b0) ) XLXI_9 (.C(CLK), 
                .CE(XLXN_25), 
                .CLR(CLR), 
                .D(XLXN_7), 
                .Q(PC0_DUMMY));
   FDCE #( .INIT(1'b0) ) XLXI_10 (.C(CLK), 
                 .CE(XLXN_25), 
                 .CLR(CLR), 
                 .D(XLXN_12), 
                 .Q(PC1_DUMMY));
   FDCE #( .INIT(1'b0) ) XLXI_11 (.C(CLK), 
                 .CE(XLXN_25), 
                 .CLR(CLR), 
                 .D(XLXN_10), 
                 .Q(PC2_DUMMY));
   FDCE #( .INIT(1'b0) ) XLXI_12 (.C(CLK), 
                 .CE(XLXN_25), 
                 .CLR(CLR), 
                 .D(XLXN_9), 
                 .Q(PC3_DUMMY));
   XOR2  XLXI_13 (.I0(INC), 
                 .I1(PC0_DUMMY), 
                 .O(XLXN_7));
   XOR2  XLXI_14 (.I0(XLXN_30), 
                 .I1(PC1_DUMMY), 
                 .O(XLXN_12));
   XOR2  XLXI_15 (.I0(XLXN_33), 
                 .I1(PC2_DUMMY), 
                 .O(XLXN_10));
   XOR2  XLXI_16 (.I0(XLXN_8), 
                 .I1(PC3_DUMMY), 
                 .O(XLXN_9));
   AND2  XLXI_18 (.I0(INC), 
                 .I1(PC0_DUMMY), 
                 .O(XLXN_30));
   AND2  XLXI_19 (.I0(XLXN_30), 
                 .I1(PC1_DUMMY), 
                 .O(XLXN_33));
   AND2  XLXI_20 (.I0(XLXN_33), 
                 .I1(PC2_DUMMY), 
                 .O(XLXN_8));
   VCC  XLXI_21 (.P(XLXN_25));
endmodule
`timescale 1ns / 1ps

module D2_4E_MXILINX_main(A0, 
                          A1, 
                          E, 
                          D0, 
                          D1, 
                          D2, 
                          D3);

    input A0;
    input A1;
    input E;
   output D0;
   output D1;
   output D2;
   output D3;
   
   
   AND3  I_36_30 (.I0(A1), 
                 .I1(A0), 
                 .I2(E), 
                 .O(D3));
   AND3B1  I_36_31 (.I0(A0), 
                   .I1(A1), 
                   .I2(E), 
                   .O(D2));
   AND3B1  I_36_32 (.I0(A1), 
                   .I1(A0), 
                   .I2(E), 
                   .O(D1));
   AND3B2  I_36_33 (.I0(A0), 
                   .I1(A1), 
                   .I2(E), 
                   .O(D0));
endmodule
`timescale 1ns / 1ps

module FTCE_MXILINX_main(C, 
                         CE, 
                         CLR, 
                         T, 
                         Q);

   parameter INIT = 1'b0;
   
    input C;
    input CE;
    input CLR;
    input T;
   output Q;
   
   wire TQ;
   wire Q_DUMMY;
   
   assign Q = Q_DUMMY;
   XOR2  I_36_32 (.I0(T), 
                 .I1(Q_DUMMY), 
                 .O(TQ));
   (* RLOC = "X0Y0" *) 
   FDCE  I_36_35 (.C(C), 
                 .CE(CE), 
                 .CLR(CLR), 
                 .D(TQ), 
                 .Q(Q_DUMMY));
endmodule
`timescale 1ns / 1ps

module CB2CE_MXILINX_main(C, 
                          CE, 
                          CLR, 
                          CEO, 
                          Q0, 
                          Q1, 
                          TC);

    input C;
    input CE;
    input CLR;
   output CEO;
   output Q0;
   output Q1;
   output TC;
   
   wire XLXN_1;
   wire Q0_DUMMY;
   wire Q1_DUMMY;
   wire TC_DUMMY;
   
   assign Q0 = Q0_DUMMY;
   assign Q1 = Q1_DUMMY;
   assign TC = TC_DUMMY;
   (* HU_SET = "I_Q0_6" *) 
   FTCE_MXILINX_main #( .INIT(1'b0) ) I_Q0 (.C(C), 
                           .CE(CE), 
                           .CLR(CLR), 
                           .T(XLXN_1), 
                           .Q(Q0_DUMMY));
   (* HU_SET = "I_Q1_7" *) 
   FTCE_MXILINX_main #( .INIT(1'b0) ) I_Q1 (.C(C), 
                           .CE(CE), 
                           .CLR(CLR), 
                           .T(Q0_DUMMY), 
                           .Q(Q1_DUMMY));
   AND2  I_36_37 (.I0(Q1_DUMMY), 
                 .I1(Q0_DUMMY), 
                 .O(TC_DUMMY));
   VCC  I_36_47 (.P(XLXN_1));
   AND2  I_36_52 (.I0(CE), 
                 .I1(TC_DUMMY), 
                 .O(CEO));
endmodule
`timescale 1ns / 1ps

module sequencer_MUSER_main(CLK, 
                            CLR, 
                            T0, 
                            T1, 
                            T2, 
                            T3);

    input CLK;
    input CLR;
   output T0;
   output T1;
   output T2;
   output T3;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_6;
   
   (* HU_SET = "XLXI_1_8" *) 
   CB2CE_MXILINX_main  XLXI_1 (.C(CLK), 
                              .CE(XLXN_6), 
                              .CLR(CLR), 
                              .CEO(), 
                              .Q0(XLXN_1), 
                              .Q1(XLXN_2), 
                              .TC());
   (* HU_SET = "XLXI_2_9" *) 
   D2_4E_MXILINX_main  XLXI_2 (.A0(XLXN_1), 
                              .A1(XLXN_2), 
                              .E(XLXN_6), 
                              .D0(T0), 
                              .D1(T1), 
                              .D2(T2), 
                              .D3(T3));
   VCC  XLXI_3 (.P(XLXN_6));
endmodule
`timescale 1ns / 1ps

module D3_8E_MXILINX_main(A0, 
                          A1, 
                          A2, 
                          E, 
                          D0, 
                          D1, 
                          D2, 
                          D3, 
                          D4, 
                          D5, 
                          D6, 
                          D7);

    input A0;
    input A1;
    input A2;
    input E;
   output D0;
   output D1;
   output D2;
   output D3;
   output D4;
   output D5;
   output D6;
   output D7;
   
   
   AND4  I_36_30 (.I0(A2), 
                 .I1(A1), 
                 .I2(A0), 
                 .I3(E), 
                 .O(D7));
   AND4B1  I_36_31 (.I0(A0), 
                   .I1(A2), 
                   .I2(A1), 
                   .I3(E), 
                   .O(D6));
   AND4B1  I_36_32 (.I0(A1), 
                   .I1(A2), 
                   .I2(A0), 
                   .I3(E), 
                   .O(D5));
   AND4B2  I_36_33 (.I0(A1), 
                   .I1(A0), 
                   .I2(A2), 
                   .I3(E), 
                   .O(D4));
   AND4B1  I_36_34 (.I0(A2), 
                   .I1(A0), 
                   .I2(A1), 
                   .I3(E), 
                   .O(D3));
   AND4B2  I_36_35 (.I0(A2), 
                   .I1(A0), 
                   .I2(A1), 
                   .I3(E), 
                   .O(D2));
   AND4B2  I_36_36 (.I0(A2), 
                   .I1(A1), 
                   .I2(A0), 
                   .I3(E), 
                   .O(D1));
   AND4B3  I_36_37 (.I0(A2), 
                   .I1(A1), 
                   .I2(A0), 
                   .I3(E), 
                   .O(D0));
endmodule
`timescale 1ns / 1ps

module InstructionRegister_MUSER_main(CE, 
                                      CLK, 
                                      CLR, 
                                      IRI0, 
                                      IRI1, 
                                      IRI2, 
                                      IRI3, 
                                      IRI4, 
                                      IRI5, 
                                      IRI6, 
                                      IRI7, 
                                      IRO0, 
                                      IRO1, 
                                      IRO2, 
                                      IRO3, 
                                      IRO4, 
                                      IRO5, 
                                      IRO6, 
                                      IRO7);

    input CE;
    input CLK;
    input CLR;
    input IRI0;
    input IRI1;
    input IRI2;
    input IRI3;
    input IRI4;
    input IRI5;
    input IRI6;
    input IRI7;
   output IRO0;
   output IRO1;
   output IRO2;
   output IRO3;
   output IRO4;
   output IRO5;
   output IRO6;
   output IRO7;
   
   
   FDCE #( .INIT(1'b0) ) XLXI_1 (.C(CLK), 
                .CE(CE), 
                .CLR(CLR), 
                .D(IRI0), 
                .Q(IRO0));
   FDCE #( .INIT(1'b0) ) XLXI_2 (.C(CLK), 
                .CE(CE), 
                .CLR(CLR), 
                .D(IRI1), 
                .Q(IRO1));
   FDCE #( .INIT(1'b0) ) XLXI_3 (.C(CLK), 
                .CE(CE), 
                .CLR(CLR), 
                .D(IRI2), 
                .Q(IRO2));
   FDCE #( .INIT(1'b0) ) XLXI_4 (.C(CLK), 
                .CE(CE), 
                .CLR(CLR), 
                .D(IRI3), 
                .Q(IRO3));
   FDCE #( .INIT(1'b0) ) XLXI_5 (.C(CLK), 
                .CE(CE), 
                .CLR(CLR), 
                .D(IRI4), 
                .Q(IRO4));
   FDCE #( .INIT(1'b0) ) XLXI_6 (.C(CLK), 
                .CE(CE), 
                .CLR(CLR), 
                .D(IRI5), 
                .Q(IRO5));
   FDCE #( .INIT(1'b0) ) XLXI_7 (.C(CLK), 
                .CE(CE), 
                .CLR(CLR), 
                .D(IRI6), 
                .Q(IRO6));
   FDCE #( .INIT(1'b0) ) XLXI_8 (.C(CLK), 
                .CE(CE), 
                .CLR(CLR), 
                .D(IRI7), 
                .Q(IRO7));
endmodule
`timescale 1ns / 1ps

module main(B0, 
            B1, 
            B2, 
            B3, 
            B4, 
            B5, 
            B6, 
            B7, 
            CIN, 
            CLK, 
            CLR, 
            ramIN);

    input B0;
    input B1;
    input B2;
    input B3;
    input B4;
    input B5;
    input B6;
    input B7;
    input CIN;
    input CLK;
    input CLR;
   output [7:0] ramIN;
   
   wire [7:0] ramOUT;
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_7;
   wire XLXN_8;
   wire XLXN_34;
   wire XLXN_35;
   wire XLXN_36;
   wire XLXN_39;
   wire XLXN_94;
   wire XLXN_95;
   wire XLXN_96;
   wire XLXN_97;
   wire XLXN_101;
   wire XLXN_102;
   wire XLXN_107;
   wire XLXN_108;
   wire XLXN_109;
   wire XLXN_112;
   wire XLXN_113;
   wire XLXN_114;
   wire XLXN_116;
   wire XLXN_117;
   wire XLXN_118;
   wire XLXN_119;
   wire XLXN_120;
   wire XLXN_121;
   wire XLXN_122;
   wire XLXN_127;
   wire XLXN_128;
   wire XLXN_129;
   wire XLXN_130;
   wire XLXN_131;
   wire XLXN_133;
   wire XLXN_134;
   wire [7:0] ramIN_DUMMY;
   
   assign ramIN[7:0] = ramIN_DUMMY[7:0];
   RAM16X8S #( .INIT_07(16'hc5b1), .INIT_06(16'h36b2), .INIT_05(16'h6c23), 
         .INIT_04(16'ha8a4), .INIT_03(16'haaaa), .INIT_02(16'hcccc), 
         .INIT_01(16'hf0f0), .INIT_00(16'h8080) ) XLXI_1 (.A0(XLXN_1), 
                    .A1(XLXN_2), 
                    .A2(XLXN_3), 
                    .A3(XLXN_4), 
                    .D(ramIN_DUMMY[7:0]), 
                    .WCLK(CLK), 
                    .WE(XLXN_133), 
                    .O(ramOUT[7:0]));
   (* HU_SET = "XLXI_3_11" *) 
   FD4CE_MXILINX_main  XLXI_3 (.C(CLK), 
                              .CE(XLXN_114), 
                              .CLR(CLR), 
                              .D0(XLXN_5), 
                              .D1(XLXN_6), 
                              .D2(XLXN_7), 
                              .D3(XLXN_8), 
                              .Q0(XLXN_1), 
                              .Q1(XLXN_2), 
                              .Q2(XLXN_3), 
                              .Q3(XLXN_4));
   sequencer_MUSER_main  XLXI_4 (.CLK(CLK), 
                                .CLR(CLR), 
                                .T0(XLXN_112), 
                                .T1(XLXN_119), 
                                .T2(XLXN_113), 
                                .T3(XLXN_117));
   (* HU_SET = "XLXI_5_12" *) 
   M2_1_MXILINX_main  XLXI_5 (.D0(XLXN_127), 
                             .D1(XLXN_120), 
                             .S0(XLXN_113), 
                             .O(XLXN_5));
   (* HU_SET = "XLXI_6_13" *) 
   M2_1_MXILINX_main  XLXI_6 (.D0(XLXN_128), 
                             .D1(XLXN_121), 
                             .S0(XLXN_113), 
                             .O(XLXN_6));
   (* HU_SET = "XLXI_7_14" *) 
   M2_1_MXILINX_main  XLXI_7 (.D0(XLXN_129), 
                             .D1(XLXN_122), 
                             .S0(XLXN_113), 
                             .O(XLXN_7));
   (* HU_SET = "XLXI_8_15" *) 
   M2_1_MXILINX_main  XLXI_8 (.D0(XLXN_130), 
                             .D1(XLXN_134), 
                             .S0(XLXN_113), 
                             .O(XLXN_8));
   counter_MUSER_main  XLXI_9 (.CLK(CLK), 
                              .CLR(CLR), 
                              .INC(XLXN_119), 
                              .PC0(XLXN_120), 
                              .PC1(XLXN_121), 
                              .PC2(XLXN_122), 
                              .PC3(XLXN_134));
   InstructionRegister_MUSER_main  XLXI_11 (.CE(XLXN_119), 
                                           .CLK(CLK), 
                                           .CLR(CLR), 
                                           .IRI0(ramOUT[0]), 
                                           .IRI1(ramOUT[1]), 
                                           .IRI2(ramOUT[2]), 
                                           .IRI3(ramOUT[3]), 
                                           .IRI4(ramOUT[4]), 
                                           .IRI5(ramOUT[5]), 
                                           .IRI6(ramOUT[6]), 
                                           .IRI7(ramOUT[7]), 
                                           .IRO0(XLXN_127), 
                                           .IRO1(XLXN_128), 
                                           .IRO2(XLXN_129), 
                                           .IRO3(XLXN_130), 
                                           .IRO4(XLXN_34), 
                                           .IRO5(XLXN_35), 
                                           .IRO6(XLXN_36), 
                                           .IRO7(XLXN_131));
   (* HU_SET = "XLXI_12_10" *) 
   D3_8E_MXILINX_main  XLXI_12 (.A0(XLXN_34), 
                               .A1(XLXN_35), 
                               .A2(XLXN_36), 
                               .E(XLXN_39), 
                               .D0(), 
                               .D1(XLXN_94), 
                               .D2(XLXN_101), 
                               .D3(XLXN_102), 
                               .D4(XLXN_109), 
                               .D5(XLXN_107), 
                               .D6(XLXN_108), 
                               .D7(XLXN_116));
   VCC  XLXI_13 (.P(XLXN_39));
   accumulator_MUSER_main  XLXI_32 (.A0(ramOUT[0]), 
                                   .A1(ramOUT[1]), 
                                   .A2(ramOUT[2]), 
                                   .A3(ramOUT[3]), 
                                   .A4(ramOUT[4]), 
                                   .A5(ramOUT[5]), 
                                   .A6(ramOUT[6]), 
                                   .A7(ramOUT[7]), 
                                   .B0(B0), 
                                   .B1(B1), 
                                   .B2(B2), 
                                   .B3(B3), 
                                   .B4(B4), 
                                   .B5(B5), 
                                   .B6(B6), 
                                   .B7(B7), 
                                   .CE(XLXN_118), 
                                   .Cin(CIN), 
                                   .CLK(CLK), 
                                   .CLR(CLR), 
                                   .S0(XLXN_95), 
                                   .S1(XLXN_96), 
                                   .S2(XLXN_97), 
                                   .S3(XLXN_107), 
                                   .S4(XLXN_108), 
                                   .S5(XLXN_109), 
                                   .O0(ramIN_DUMMY[0]), 
                                   .O1(ramIN_DUMMY[1]), 
                                   .O2(ramIN_DUMMY[2]), 
                                   .O3(ramIN_DUMMY[3]), 
                                   .O4(ramIN_DUMMY[4]), 
                                   .O5(ramIN_DUMMY[5]), 
                                   .O6(ramIN_DUMMY[6]), 
                                   .O7(ramIN_DUMMY[7]));
   OR4  XLXI_33 (.I0(XLXN_107), 
                .I1(XLXN_109), 
                .I2(XLXN_102), 
                .I3(XLXN_94), 
                .O(XLXN_95));
   OR4  XLXI_34 (.I0(XLXN_107), 
                .I1(XLXN_109), 
                .I2(XLXN_102), 
                .I3(XLXN_101), 
                .O(XLXN_96));
   OR2  XLXI_35 (.I0(XLXN_107), 
                .I1(XLXN_109), 
                .O(XLXN_97));
   OR2  XLXI_36 (.I0(XLXN_113), 
                .I1(XLXN_112), 
                .O(XLXN_114));
   AND2B1  XLXI_37 (.I0(XLXN_116), 
                   .I1(XLXN_117), 
                   .O(XLXN_118));
   AND2  XLXI_38 (.I0(XLXN_134), 
                 .I1(XLXN_131), 
                 .O(XLXN_133));
endmodule
