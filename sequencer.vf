////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : sequencer.vf
// /___/   /\     Timestamp : 12/08/2017 10:00:33
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan3e -verilog C:/Users/User/Desktop/FinalProject/sequencer.vf -w C:/Users/User/Desktop/FinalProject/sequencer.sch
//Design Name: sequencer
//Device: spartan3e
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module D2_4E_MXILINX_sequencer(A0, 
                               A1, 
                               E, 
                               D0, 
                               D1, 
                               D2, 
                               D3);

    input A0;
    input A1;
    input E;
   output D0;
   output D1;
   output D2;
   output D3;
   
   
   AND3  I_36_30 (.I0(A1), 
                 .I1(A0), 
                 .I2(E), 
                 .O(D3));
   AND3B1  I_36_31 (.I0(A0), 
                   .I1(A1), 
                   .I2(E), 
                   .O(D2));
   AND3B1  I_36_32 (.I0(A1), 
                   .I1(A0), 
                   .I2(E), 
                   .O(D1));
   AND3B2  I_36_33 (.I0(A0), 
                   .I1(A1), 
                   .I2(E), 
                   .O(D0));
endmodule
`timescale 1ns / 1ps

module FTCE_MXILINX_sequencer(C, 
                              CE, 
                              CLR, 
                              T, 
                              Q);

   parameter INIT = 1'b0;
   
    input C;
    input CE;
    input CLR;
    input T;
   output Q;
   
   wire TQ;
   wire Q_DUMMY;
   
   assign Q = Q_DUMMY;
   XOR2  I_36_32 (.I0(T), 
                 .I1(Q_DUMMY), 
                 .O(TQ));
   (* RLOC = "X0Y0" *) 
   FDCE  I_36_35 (.C(C), 
                 .CE(CE), 
                 .CLR(CLR), 
                 .D(TQ), 
                 .Q(Q_DUMMY));
endmodule
`timescale 1ns / 1ps

module CB2CE_MXILINX_sequencer(C, 
                               CE, 
                               CLR, 
                               CEO, 
                               Q0, 
                               Q1, 
                               TC);

    input C;
    input CE;
    input CLR;
   output CEO;
   output Q0;
   output Q1;
   output TC;
   
   wire XLXN_1;
   wire Q0_DUMMY;
   wire Q1_DUMMY;
   wire TC_DUMMY;
   
   assign Q0 = Q0_DUMMY;
   assign Q1 = Q1_DUMMY;
   assign TC = TC_DUMMY;
   (* HU_SET = "I_Q0_28" *) 
   FTCE_MXILINX_sequencer #( .INIT(1'b0) ) I_Q0 (.C(C), 
                                .CE(CE), 
                                .CLR(CLR), 
                                .T(XLXN_1), 
                                .Q(Q0_DUMMY));
   (* HU_SET = "I_Q1_29" *) 
   FTCE_MXILINX_sequencer #( .INIT(1'b0) ) I_Q1 (.C(C), 
                                .CE(CE), 
                                .CLR(CLR), 
                                .T(Q0_DUMMY), 
                                .Q(Q1_DUMMY));
   AND2  I_36_37 (.I0(Q1_DUMMY), 
                 .I1(Q0_DUMMY), 
                 .O(TC_DUMMY));
   VCC  I_36_47 (.P(XLXN_1));
   AND2  I_36_52 (.I0(CE), 
                 .I1(TC_DUMMY), 
                 .O(CEO));
endmodule
`timescale 1ns / 1ps

module sequencer(CLK, 
                 CLR, 
                 T0, 
                 T1, 
                 T2, 
                 T3);

    input CLK;
    input CLR;
   output T0;
   output T1;
   output T2;
   output T3;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_6;
   
   (* HU_SET = "XLXI_1_30" *) 
   CB2CE_MXILINX_sequencer  XLXI_1 (.C(CLK), 
                                   .CE(XLXN_6), 
                                   .CLR(CLR), 
                                   .CEO(), 
                                   .Q0(XLXN_1), 
                                   .Q1(XLXN_2), 
                                   .TC());
   (* HU_SET = "XLXI_2_31" *) 
   D2_4E_MXILINX_sequencer  XLXI_2 (.A0(XLXN_1), 
                                   .A1(XLXN_2), 
                                   .E(XLXN_6), 
                                   .D0(T0), 
                                   .D1(T1), 
                                   .D2(T2), 
                                   .D3(T3));
   VCC  XLXI_3 (.P(XLXN_6));
endmodule
