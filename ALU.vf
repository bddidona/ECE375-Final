////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : ALU.vf
// /___/   /\     Timestamp : 12/08/2017 10:00:33
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan3e -verilog C:/Users/User/Desktop/FinalProject/ALU.vf -w C:/Users/User/Desktop/FinalProject/ALU.sch
//Design Name: ALU
//Device: spartan3e
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module M2_1E_MXILINX_ALU(D0, 
                         D1, 
                         E, 
                         S0, 
                         O);

    input D0;
    input D1;
    input E;
    input S0;
   output O;
   
   wire M0;
   wire M1;
   
   AND3  I_36_30 (.I0(D1), 
                 .I1(E), 
                 .I2(S0), 
                 .O(M1));
   AND3B1  I_36_31 (.I0(S0), 
                   .I1(E), 
                   .I2(D0), 
                   .O(M0));
   OR2  I_36_38 (.I0(M1), 
                .I1(M0), 
                .O(O));
endmodule
`timescale 1ns / 1ps

module M4_1E_MXILINX_ALU(D0, 
                         D1, 
                         D2, 
                         D3, 
                         E, 
                         S0, 
                         S1, 
                         O);

    input D0;
    input D1;
    input D2;
    input D3;
    input E;
    input S0;
    input S1;
   output O;
   
   wire M01;
   wire M23;
   
   (* HU_SET = "I_M01_33" *) 
   M2_1E_MXILINX_ALU  I_M01 (.D0(D0), 
                            .D1(D1), 
                            .E(E), 
                            .S0(S0), 
                            .O(M01));
   (* HU_SET = "I_M23_32" *) 
   M2_1E_MXILINX_ALU  I_M23 (.D0(D2), 
                            .D1(D3), 
                            .E(E), 
                            .S0(S0), 
                            .O(M23));
   MUXF5  I_O (.I0(M01), 
              .I1(M23), 
              .S(S1), 
              .O(O));
endmodule
`timescale 1ns / 1ps

module fullAdder_MUSER_ALU(A, 
                           B, 
                           Cin, 
                           Cout, 
                           S);

    input A;
    input B;
    input Cin;
   output Cout;
   output S;
   
   wire XLXN_7;
   wire XLXN_9;
   wire XLXN_10;
   
   XOR2  XLXI_1 (.I0(B), 
                .I1(A), 
                .O(XLXN_7));
   XOR2  XLXI_2 (.I0(Cin), 
                .I1(XLXN_7), 
                .O(S));
   AND2  XLXI_3 (.I0(A), 
                .I1(B), 
                .O(XLXN_10));
   AND2  XLXI_4 (.I0(Cin), 
                .I1(XLXN_7), 
                .O(XLXN_9));
   OR2  XLXI_5 (.I0(XLXN_10), 
               .I1(XLXN_9), 
               .O(Cout));
endmodule
`timescale 1ns / 1ps

module M2_1_MXILINX_ALU(D0, 
                        D1, 
                        S0, 
                        O);

    input D0;
    input D1;
    input S0;
   output O;
   
   wire M0;
   wire M1;
   
   AND2B1  I_36_7 (.I0(S0), 
                  .I1(D0), 
                  .O(M0));
   OR2  I_36_8 (.I0(M1), 
               .I1(M0), 
               .O(O));
   AND2  I_36_9 (.I0(D1), 
                .I1(S0), 
                .O(M1));
endmodule
`timescale 1ns / 1ps

module ALU(A, 
           B, 
           Cin, 
           S0, 
           S1, 
           S2, 
           S3, 
           S4, 
           S5, 
           Cout, 
           O);

    input A;
    input B;
    input Cin;
    input S0;
    input S1;
    input S2;
    input S3;
    input S4;
    input S5;
   output Cout;
   output O;
   
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_7;
   wire XLXN_9;
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_15;
   wire XLXN_16;
   wire XLXN_17;
   wire XLXN_23;
   wire XLXN_26;
   wire XLXN_30;
   
   (* HU_SET = "XLXI_1_34" *) 
   M4_1E_MXILINX_ALU  XLXI_1 (.D0(XLXN_13), 
                             .D1(XLXN_14), 
                             .D2(XLXN_15), 
                             .D3(XLXN_16), 
                             .E(XLXN_23), 
                             .S0(S0), 
                             .S1(S1), 
                             .O(XLXN_17));
   (* HU_SET = "XLXI_2_35" *) 
   M2_1_MXILINX_ALU  XLXI_2 (.D0(XLXN_17), 
                            .D1(A), 
                            .S0(S4), 
                            .O(O));
   (* HU_SET = "XLXI_3_36" *) 
   M2_1_MXILINX_ALU  XLXI_3 (.D0(B), 
                            .D1(XLXN_7), 
                            .S0(S3), 
                            .O(XLXN_3));
   fullAdder_MUSER_ALU  XLXI_5 (.A(A), 
                               .B(XLXN_3), 
                               .Cin(XLXN_4), 
                               .Cout(Cout), 
                               .S(XLXN_16));
   INV  XLXI_6 (.I(B), 
               .O(XLXN_7));
   VCC  XLXI_7 (.P(XLXN_26));
   GND  XLXI_8 (.G(XLXN_9));
   AND2  XLXI_9 (.I0(B), 
                .I1(A), 
                .O(XLXN_13));
   OR2  XLXI_10 (.I0(A), 
                .I1(B), 
                .O(XLXN_14));
   XOR2  XLXI_11 (.I0(A), 
                 .I1(B), 
                 .O(XLXN_15));
   VCC  XLXI_12 (.P(XLXN_23));
   (* HU_SET = "XLXI_13_37" *) 
   M4_1E_MXILINX_ALU  XLXI_13 (.D0(XLXN_9), 
                              .D1(XLXN_26), 
                              .D2(Cin), 
                              .D3(), 
                              .E(XLXN_30), 
                              .S0(S5), 
                              .S1(S2), 
                              .O(XLXN_4));
   VCC  XLXI_14 (.P(XLXN_30));
endmodule
